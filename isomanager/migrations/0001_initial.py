# Generated by Django 3.2.8 on 2021-10-21 04:02

import django.db.models.deletion
import recurrence.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [migrations.CreateModel(name='CatalogItem',
                                         fields=[('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('last_update', models.DateTimeField(help_text='Time last scanned', verbose_name='Last Update')),
                                                 ('version_scheme', models.CharField(help_text='The version scheme being used', max_length=3, verbose_name='Version Scheme')),
                                                 ('maintainer', models.CharField(help_text='The version number of the item', max_length=255, verbose_name='Maintainer')),
                                                 ('sha256sum', models.CharField(help_text='The SHA256 checksum of the item', max_length=64, unique=True, verbose_name='SHA256 Checksum')), ('os_type', models.CharField(
                                                 choices=[('WINDOWS', 'Windows'), ('APPLE', 'Apple'), ('LINUX', 'Linux'), ('BSD', 'BSD'), ('VMWARE', 'VMware'), ('STORAGE', 'Storage Appliances'), ('VIRTUALIZATION', 'Virtualization Appliances'),
                                                          ('FIREWALL', 'Firewall Appliances'), ('FIRMWARE', 'Firmware and driver utilities'), ('RECOVERY', 'Recovery Tools'), ('OTHER', 'Other')], default='LINUX', help_text='The type of image',
                                                 max_length=16, verbose_name='OS Type')), ('detached_from_head', models.BooleanField(help_text='True if the item has been manually edited', verbose_name='Detached from head')),
                                                 ('release_date', models.DateTimeField(help_text='The release date of this version', verbose_name='Release date')), ],
                                         options={'verbose_name': 'Catalog Item', 'verbose_name_plural': 'Catalog Items', 'ordering': ['-release_date'], }, ), migrations.CreateModel(name='Datastore', fields=[
        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        ('datastore_type', models.CharField(choices=[('PATH', 'Path'), ('SSH', 'Ssh')], default='PATH', help_text='Datastore type, local path and SSH are supported', max_length=4, verbose_name='Datastore')),
        ('location', models.CharField(help_text='The the location of the datastore', max_length=255, verbose_name='Location')),
        ('auth_type', models.CharField(blank=True, choices=[('USER', 'Path'), ('KEY', 'Ssh')], help_text='Authentication type, username or key, only used for SSH', max_length=4, null=True, verbose_name='Auth Type')),
        ('username', models.CharField(blank=True, help_text='SSH Username', max_length=64, null=True, verbose_name='Username')), ('password', models.CharField(blank=True, help_text='SSH Password', max_length=64, null=True, verbose_name='Password')),
        ('readonly', models.BooleanField(help_text='True if the iso manager does not have write permission', verbose_name='Read-only')),
        ('last_scan', models.DateTimeField(blank=True, help_text='Time this datastore was last scanned', null=True, verbose_name='Last scan')), ], options={'verbose_name': 'Datastore', 'verbose_name_plural': 'Datastores',
                                                                                                                                                            'ordering': ['-last_scan'], }, ), migrations.CreateModel(name='ManagedItem', fields=[
        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('full_path', models.CharField(max_length=255)), ('sha256sum', models.CharField(max_length=64)),
        ('datastore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='isomanager.datastore')),
        ('library_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='isomanager.catalogitem')), ], options={'verbose_name': 'Managed Item', 'verbose_name_plural': 'Managed Items', }, ),
                  migrations.CreateModel(name='RemoteCatalog', fields=[('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                                                                       ('catalog_name', models.CharField(help_text='The name of the catalog', max_length=32, verbose_name='Catalog name')),
                                                                       ('json_catalog', models.JSONField(help_text='The JSON model as downloaded from the upstream', verbose_name='JSON catalog')),
                                                                       ('version', models.CharField(help_text='Version of the JSON catalog', max_length=32, verbose_name='Version')),
                                                                       ('remote_url', models.CharField(help_text='Remote URL to update the JSON model', max_length=255, verbose_name='Remote URL')),
                                                                       ('auto_update', models.BooleanField(default=True, help_text='Auto update the JSON catalog', verbose_name='Auto Update')),
                                                                       ('priority', models.CharField(help_text='Catalog items with higher priority will override those with lower priority', max_length=3, unique=True, verbose_name='Priority')), ],
                                         options={'verbose_name': 'Catalog', 'verbose_name_plural': 'Catalogs', 'ordering': ['-priority'], }, ), migrations.CreateModel(name='UpdateTarget', fields=[
            ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('target_name', models.CharField(help_text='The name for this auto-update target', max_length=64, verbose_name='Auto-Update Name')),
            ('desired_version', models.CharField(help_text='The desired target version of this image', max_length=32, verbose_name='Desired Version')),
            ('update_check_frequency', recurrence.fields.RecurrenceField(help_text='How often should this image be updated')),
            ('catalog_item', models.ForeignKey(help_text='The catalog item linked to this target', on_delete=django.db.models.deletion.RESTRICT, to='isomanager.catalogitem')),
            ('managed_item', models.ForeignKey(help_text='The items currently satisfying this target', on_delete=django.db.models.deletion.DO_NOTHING, to='isomanager.manageditem')), ], options={'verbose_name': 'Auto-Update Target',
                                                                                                                                                                                                  'verbose_name_plural': 'Auto-Update Targets', }, ),
                  migrations.CreateModel(name='OsEdition', fields=[('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                                                                   ('os_edition_name', models.CharField(help_text='The edition of the OS', max_length=32, unique=True, verbose_name='OS Edition')),
                                                                   ('os_edition_version', models.CharField(help_text='The version number of the item', max_length=32, unique=True, verbose_name='Version Number')), ('os_edition_arch', models.CharField(
                          choices=[('X86', 'x86'), ('AMD64', 'amd64'), ('ARMV8', 'ArmV8')], default='AMD64', help_text='The architecture of the OS', max_length=16, unique=True, verbose_name='OS Architecture')), ('os_edition_language',
                                                                                                                                                                                                                    models.CharField(
                                                                                                                                                                                                                        choices=[('ENGLISH', 'English'),
                                                                                                                                                                                                                                 ('FRENCH', 'French')],
                                                                                                                                                                                                                        help_text='The language of the item in the catalog',
                                                                                                                                                                                                                        max_length=64, unique=True,
                                                                                                                                                                                                                        verbose_name='Language')), ],
                                         options={'verbose_name': 'OS Edition', 'verbose_name_plural': 'OS Edition', 'unique_together': {('os_edition_name', 'os_edition_version', 'os_edition_arch', 'os_edition_language')}, }, ),
                  migrations.AddField(model_name='catalogitem', name='os_edition', field=models.ForeignKey(help_text='The edition of the OS', max_length=32, on_delete=django.db.models.deletion.DO_NOTHING, to='isomanager.osedition'), ), ]
