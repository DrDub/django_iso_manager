# Generated by Django 3.2.8 on 2021-10-19 20:43

from django.db import migrations, models
import django.db.models.deletion
import recurrence.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Datastore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datastoretype', models.CharField(choices=[('PATH', 'Path'), ('NFS', 'Nfs'), ('CIFS', 'Cifs'), ('SFTP', 'Sftp'), ('FTP', 'Ftp')], default='PATH', max_length=4)),
                ('readonly', models.BooleanField()),
                ('last_scan', models.DateTimeField(verbose_name='last scan')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha256sum', models.CharField(max_length=64)),
                ('datastore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='isomanager.datastore')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('desired_version', models.CharField(max_length=32)),
                ('update_check_frequency', recurrence.fields.RecurrenceField()),
            ],
        ),
        migrations.CreateModel(
            name='RemoteCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=32)),
                ('remote_location', models.CharField(max_length=255)),
                ('auto_update', models.BooleanField(default=True)),
                ('priority', models.CharField(max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocalCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(verbose_name='last update')),
                ('versionscheme', models.CharField(choices=[('SEM', 'SemVer'), ('CAL', 'CalVer')], default='SEM', max_length=3)),
                ('version', models.CharField(max_length=255)),
                ('maintainer', models.CharField(max_length=255)),
                ('sha256sum', models.CharField(max_length=64, unique=True)),
                ('ostype', models.CharField(choices=[('WINDOWS', 'Windows'), ('MACOS', 'macOS'), ('LINUX', 'Linux'), ('BSD', 'BSD'), ('VMWARE', 'VMware'), ('STORAGE', 'Storage Appliances'), ('VIRTUALIZATION', 'Virtualization Appliances'), ('FIREWALL', 'Firewall Appliances'), ('FIRMWARE', 'Firmware and driver utilities'), ('RECOVERY', 'Recovery Tools'), ('OTHER', 'Other')], default='LINUX', max_length=16)),
                ('detachedfromhead', models.BooleanField()),
                ('library_item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='isomanager.libraryitem')),
            ],
        ),
        migrations.AddField(
            model_name='libraryitem',
            name='targeted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='isomanager.librarytarget'),
        ),
    ]
